var _={nativeForEach:Array.prototype.forEach,each:function(t,e,r){if(null==t)return t;if(this.nativeForEach&&t.forEach===this.nativeForEach)t.forEach(e,r);else if(t.length===+t.length){for(var i=0,a=t.length;a>i;i++)if(e.call(r,t[i],i,t)===breaker)return}else for(var s=_.keys(t),i=0,a=s.length;a>i;i++)if(e.call(r,t[s[i]],s[i],t)===breaker)return;return t},slice:Array.prototype.slice,extend:function(t){return this.each(this.slice.call(arguments,1),function(e){if(e)for(var r in e)t[r]=e[r]}),t}};angular.module("ngReactGrid",[]).directive("ngReactGrid",["ngReactGrid",function(t){return{restrict:"E",link:function(e,r,i){new t(e,r,i)}}}]).factory("ngReactGrid",["$rootScope",function(t){var e=function(t,e){this.ngReactGrid=e,this.grid=t,this.showingRecords=0,this.originalData=[]};e.prototype.setPageSize=function(e){t.$apply(function(){this.ngReactGrid.update({pageSize:e}),this.ngReactGrid.render()}.bind(this))},e.prototype.setSortField=function(e){t.$apply(function(){this.grid.sortInfo.field!==e?(this.grid.sortInfo.field=e,this.grid.sortInfo.dir="asc"):this.grid.sortInfo.dir="asc"===this.grid.sortInfo.dir?"desc":"asc",this.sort()}.bind(this))},e.prototype.sort=function(){this.grid.data.sort(function(t,e){return"asc"===this.grid.sortInfo.dir?t[this.grid.sortInfo.field]<=e[this.grid.sortInfo.field]?-1:1:t[this.grid.sortInfo.field]>=e[this.grid.sortInfo.field]?-1:1}.bind(this)),this.ngReactGrid.render()},e.prototype.setSearch=function(e){t.$apply(function(){e=String(e).toLowerCase(),this.grid.data=this.originalData.slice(0);var t=this.grid.data.filter(function(t){var r=!1;for(var i in t)if(t.hasOwnProperty(i)&&-1!==String(t[i]).toLowerCase().indexOf(e)){r=!0;break}return r});this.ngReactGrid.update({data:t}),this.ngReactGrid.render()}.bind(this))};var r=function(t){return this.columnDefs=[],this.data=[],this.height=500,this.totalCount=0,this.totalPages=0,this.currentPage=1,this.pageSize=25,this.pageSizes=[25,50,100,500],this.sortInfo={field:"",dir:""},this.horizontalScroll=!1,this.scrollbarWidth=function(){var t=document.createElement("div");t.style.visibility="hidden",t.style.width="100px",t.style.msOverflowStyle="scrollbar",document.body.appendChild(t);var e=t.offsetWidth;t.style.overflow="scroll";var r=document.createElement("div");r.style.width="100%",t.appendChild(r);var i=r.offsetWidth;return t.parentNode.removeChild(t),e-i}(),this.core=new e(this,t),this},i=function(t,e,i){this.scope=t,this.element=e[0],this.attrs=i,this.grid=new r(this),t.$watch("grid.data",function(t){this.update({data:t},!0),this.render()}.bind(this)),this.update(t.grid,!0),this.render()};return i.prototype.update=function(t,e){for(var r in t)if(t.hasOwnProperty(r)&&"core"===r)throw new Error("Trying to update the grid with the reserved 'core' property");this.grid=_.extend(this.grid,t),this.grid.totalCount=this.grid.data.length,this.grid.totalPages=Math.ceil(this.grid.totalCount/this.grid.pageSize),e&&(this.grid.core.originalData=this.grid.data.slice(0))},i.prototype.render=function(){React.renderComponent(ngReactGridComponent({grid:this.grid}),this.element)},i}]);var ngReactGridComponent=function(){var t=window.innerWidth,e=(window.innerHeight,function(e){var r=String(e.width).replace("px",""),i=-1!==r.indexOf("%");if(i){var a=Math.floor(parseInt(r)*t/100);e.width=a}}),r=function(t,r,i){r.width||(r.width="10%"),t.horizontalScroll&&e(r),i.width=r.width},i=function(){var t=React.createClass({displayName:"ngGridHeaderCell",handleClick:function(){this.props.grid.core.setSortField(this.props.cell.field)},render:function(){var t={};r(this.props.grid,this.props.cell,t,this.props.last);var e={display:"inline-block",position:"absolute",marginLeft:5,paddingTop:2},i="icon-arrows";return this.props.grid.sortInfo.field===this.props.cell.field?(i+="asc"===this.props.grid.sortInfo.dir?" icon-asc":" icon-desc",e.paddingTop=4):i+=" icon-both",React.DOM.th({title:this.props.cell.displayName,style:t},React.DOM.div({className:"ngGridHeaderCellText",onClick:this.handleClick},this.props.cell.displayName,React.DOM.div({style:e},React.DOM.i({className:i}))),React.DOM.div({className:"ngGridHeaderCellResize"}))}}),e=React.createClass({displayName:"ngReactGridShowPerPage",handleChange:function(){this.props.grid.core.setPageSize(this.refs.showPerPage.getDOMNode().value)},render:function(){var t=this.props.grid.pageSizes.map(function(t,e){return React.DOM.option({value:t,key:e},t)}.bind(this));return React.DOM.div({className:"ngReactGridShowPerPage"},"Show ",React.DOM.select({onChange:this.handleChange,ref:"showPerPage",value:this.props.grid.pageSize},t)," entries")}}),i=React.createClass({displayName:"ngReactGridSearch",handleSearch:function(){this.props.grid.core.setSearch(this.refs.searchField.getDOMNode().value)},render:function(){return React.DOM.div({className:"ngReactGridSearch"},React.DOM.input({type:"input",placeholder:"Search...",ref:"searchField",onKeyUp:this.handleSearch}))}});return React.createClass({render:function(){var r=this.props.grid.columnDefs.length,a=this.props.grid.columnDefs.map(function(e,i){var a=r-1===i;return t({key:i,cell:e,index:i,grid:this.props.grid,last:a})}.bind(this)),s={width:"calc(100% - "+this.props.grid.scrollbarWidth+"px)"},n={paddingRight:this.props.grid.horizontalScroll?this.props.grid.scrollbarWidth:0};return React.DOM.div(null,React.DOM.div({className:"ngReactGridHeaderToolbarWrapper"},e({grid:this.props.grid,setGridState:this.props.setGridState}),i({grid:this.props.grid})),React.DOM.div({className:"ngReactGridHeaderWrapper"},React.DOM.div({className:"ngReactGridHeader",style:n},React.DOM.div({className:"ngReactGridHeaderInner"},React.DOM.table({style:s},React.DOM.thead(null,React.DOM.tr(null,a)))))))}})}(),a=function(){var t=React.createClass({displayName:"ngReactGridBodyRowCell",render:function(){var t=this.props.row[this.props.cell.field],e={};return r(this.props.grid,this.props.cell,e,this.props.last,!0),React.DOM.td({style:e,title:t},React.DOM.div(null,t))}}),e=React.createClass({displayName:"ngReactGridBodyRow",render:function(){var e=this.props.grid.columnDefs.length,r=this.props.grid.columnDefs.map(function(r,i){var a=e-1===i;return t({key:i,cell:r,row:this.props.row,grid:this.props.grid,last:a})}.bind(this));return React.DOM.tr(null,r)}});return React.createClass({getInitialState:function(){return{fullRender:!1,needsUpdate:!1}},calculateNeedsUpdate:function(){this.props.grid.pageSize>=100&&this.props.grid.data.length>100&&this.setState({needsUpdate:!0})},componentWillMount:function(){this.calculateNeedsUpdate()},componentWillReceiveProps:function(){this.calculateNeedsUpdate()},componentDidMount:function(){var t=this.getDOMNode(),e=document.querySelector(".ngReactGridHeaderInner"),r=document.querySelector(".ngReactGridViewPort");t.firstChild.addEventListener("scroll",function(){e.scrollLeft=r.scrollLeft}),this.state.needsUpdate&&this.setState({fullRender:!0,needsUpdate:!1})},render:function(){var t,r=function(t,r){return e({key:r,row:t,columns:this.props.columnDefs,grid:this.props.grid})}.bind(this);if(this.state.fullRender)this.props.grid.core.showingRecords=this.props.grid.data.length,t=this.props.grid.data.map(r);else{var i=this.props.grid.data.slice(0,this.props.grid.pageSize);this.props.grid.core.showingRecords=i.length,t=i.map(r)}var a={},s={};if(this.props.grid.horizontalScroll?s.width="calc(100% - "+this.props.grid.scrollbarWidth+"px)":a.overflowX="hidden",0===this.props.grid.core.showingRecords){var n={textAlign:"center"};t=React.DOM.tr(null,React.DOM.td({colSpan:this.props.grid.columnDefs.length,style:n},"No records found"))}return React.DOM.div({className:"ngReactGridBody"},React.DOM.div({className:"ngReactGridViewPort",style:a},React.DOM.div({className:"ngReactGridInnerViewPort"},React.DOM.table({style:s},React.DOM.tbody(null,t)))))}})}(),s=function(){var t=React.createClass({displayName:"ngReactGridStatus",render:function(){return React.DOM.div({className:"ngReactGridStatus"},React.DOM.div(null,"Showing ",React.DOM.strong(null,"1")," to ",React.DOM.strong(null,this.props.grid.core.showingRecords)," of ",React.DOM.strong(null,this.props.grid.totalCount)," entries"))}}),e=React.createClass({displayName:"ngReactGridPagination",render:function(){for(var t=2,e=this.props.grid.totalPages,r=this.props.grid.currentPage,i=0>=r-t?1:r-t,a=r+t>=e?e:r+t,s=[],n=i;a>=n;n++)s.push(n);return s=s.map(function(t,e){return React.DOM.li({key:e},React.DOM.a({href:"#"},t))}),React.DOM.div({className:"ngReactGridPagination"},React.DOM.ul(null,React.DOM.li(null,React.DOM.a({href:"#"},"Prev")),React.DOM.li(null,React.DOM.a({href:"#"},"First")),s,React.DOM.li(null,React.DOM.a({href:"#"},"Last")),React.DOM.li(null,React.DOM.a({href:"#"},"Next"))))}});return React.createClass({render:function(){return React.DOM.div({className:"ngReactGridFooter"},t({grid:this.props.grid}),e({grid:this.props.grid}))}})}(),n=React.createClass({displayName:"ngReactGrid",render:function(){return React.DOM.div({className:"ngReactGrid"},i({grid:this.props.grid}),a({grid:this.props.grid}),s({grid:this.props.grid}))}});return n}();