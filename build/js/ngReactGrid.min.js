var _={nativeForEach:Array.prototype.forEach,each:function(e,t,r){if(null==e)return e;if(this.nativeForEach&&e.forEach===this.nativeForEach)e.forEach(t,r);else if(e.length===+e.length){for(var i=0,n=e.length;n>i;i++)if(t.call(r,e[i],i,e)===breaker)return}else for(var a=_.keys(e),i=0,n=a.length;n>i;i++)if(t.call(r,e[a[i]],a[i],e)===breaker)return;return e},slice:Array.prototype.slice,extend:function(e){return this.each(this.slice.call(arguments,1),function(t){if(t)for(var r in t)e[r]=t[r]}),e}};angular.module("ngReactGrid",[]).directive("ngReactGrid",["ngReactGrid",function(e){return{restrict:"E",link:function(t,r,i){new e(t,r,i)}}}]).factory("ngReactGrid",function(){var e=function(){var e=document.createElement("div");e.style.visibility="hidden",e.style.width="100px",e.style.msOverflowStyle="scrollbar",document.body.appendChild(e);var t=e.offsetWidth;e.style.overflow="scroll";var r=document.createElement("div");r.style.width="100%",e.appendChild(r);var i=r.offsetWidth;return e.parentNode.removeChild(e),t-i},t=function(t,r){var i=function(e){React.renderComponent(ngReactGridComponent({grid:e}),r[0])},n={columnDefs:[],data:[],height:500,scrollbarWidth:e(),sort:function(){},columnResize:function(){},autoColumnResize:function(){}},a=_.extend(n,t.grid);t.$watch("grid.data",function(e){_.extend(a,{data:e}),i(a)}),i(a)};return t});var ngReactGridComponent=function(){var e,t=window.innerWidth,r=(window.innerHeight,function(e,r,i){var n=!1;e.width||(e.width="10%");var a=e.width.indexOf("%");if(-1!==a){var c=parseInt(e.width.replace("%","")),l=t,s=parseInt(c*l/100-24);e.width=String(s),r.width=e.width+"px"}else n=!0,r.width=e.width;i&&(n&&(e.width=e.width.replace("px","")),r.width=parseInt(e.width)+0+"px")}),i=function(){var e=React.createClass({displayName:"ngGridHeaderCell",render:function(){var e={};return r(this.props.cell,e,this.props.last),React.DOM.th({title:this.props.cell.displayName,style:e},React.DOM.div(null,this.props.cell.displayName))}});return React.createClass({render:function(){var t=this.props.grid.columnDefs.length,r=this.props.grid.columnDefs.map(function(r,i){var n=t-1===i;return e({key:i,cell:r,index:i,grid:this.props.grid,last:n})}.bind(this));return React.DOM.div({className:"ngReactGridHeader"},React.DOM.div(null),React.DOM.div(null,React.DOM.table(null,React.DOM.tbody(null,React.DOM.tr(null,r)))))}})}(),n=function(){var e=React.createClass({displayName:"ngReactGridBodyRowCell",render:function(){var e=this.props.row[this.props.cell.field],t={};return r(this.props.cell,t),React.DOM.td({style:t,title:e},e)}}),t=React.createClass({displayName:"ngReactGridBodyRow",render:function(){var t=this.props.grid.columnDefs.length,r=this.props.grid.columnDefs.map(function(r,i){var n=t-1===i;return e({key:i,cell:r,row:this.props.row,grid:this.props.grid,last:n})}.bind(this));return React.DOM.tr(null,r)}});return React.createClass({render:function(){var e=this.props.grid.data.slice(0,100).map(function(e,r){return t({key:r,row:e,columns:this.props.columnDefs,grid:this.props.grid})}.bind(this));return React.DOM.div({className:"ngReactGridBody"},React.DOM.div({className:"ngReactGridViewPort"},React.DOM.div({className:"ngReactGridInnerViewPort"},React.DOM.table(null,React.DOM.tbody(null,e)))))}})}(),a=function(){return React.createClass({render:function(){return React.DOM.div({className:"ngReactGridFooter"},"-")}})}(),c=React.createClass({displayName:"ngReactGrid",render:function(){return e=this.props.grid.scrollbarWidth,React.DOM.div({className:"ngReactGrid"},i({grid:this.props.grid}),n({grid:this.props.grid}),a({grid:this.props.grid}))}});return c}();